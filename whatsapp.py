from flask import Flask, request, jsonify
import requests
from methods import *
import subprocess
import re
import threading
import time

# –î–ê–ù–ù–´–ï –ò–ó WHAPI
AUTH_TOKEN_NGROK = "2tfigBPDuyvTWHRJrtH0yEi3tVp_6WfQL6CmhtWiVw5weK38r"
API_KEY = "JeckyS6ptE9PA2ZPbq9dZD10zOMtsqOS"
WHAPI_URL = "https://gate.whapi.cloud/messages/text"
PATCH_SETTINGS_ENDPOINT = f"https://gate.whapi.cloud/settings"
create_folders()
createDataBase()
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = Flask(__name__)

def start_localtunnel(port):
    # –ó–∞–ø—É—Å–∫–∞–µ–º LocalTunnel –∏ –∂–¥—ë–º, –ø–æ–∫–∞ –æ–Ω –≤—ã–≤–µ–¥–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–π URL
    # –ü–∞—Ä–∞–º–µ—Ç—Ä --print-requests –ø–æ–∫–∞–∂–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ (–º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å)
    cmd = ["lt", "--port", str(port), "--print-requests"]

    process = subprocess.Popen(
        cmd,
        stdout=subprocess.PIPE,
        stderr=subprocess.STDOUT,
        text=True,
        shell=True
    )

    tunnel_url = None
    for line in process.stdout:
        print(line, end="")  # –ú–æ–∂–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –≤—Å—ë, —á—Ç–æ –ø–∏—à–µ—Ç lt
        match = re.search(r"^your url is: (https://[^\s]+)", line)
        if match:
            tunnel_url = match.group(1)
            print(f"LocalTunnel URL: {tunnel_url}")
            break
    
    # –í —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç LocalTunnel –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ñ–æ–Ω–µ,
    # –∞ –º—ã —É–∂–µ –∑–Ω–∞–µ–º public URL. –í–æ–∑–≤—Ä–∞—â–∞–µ–º process + URL.
    return process, tunnel_url

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
def send_message(chat_id, text):
    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "to": chat_id,
        "body": text,
    }
    print("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Whapi:", data)  # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
    response = requests.post(WHAPI_URL, json=data, headers=headers)
    print("üì© –û—Ç–≤–µ—Ç –æ—Ç Whapi:", response.json())  # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    return response.json()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≤–µ–±—Ö—É–∫)
@app.route("/webhook", methods=["POST"])
def webhook():

    data = request.json
    print("üì© –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:", data)
    print("-" * 80)

    if 'messages' in data:
        print("‚úÖ –í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        print("-" * 80)

        for message in data["messages"]:
            if not message["from_me"]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç –±–æ—Ç–∞
                chat_id = message["chat_id"]  # –ë–µ—Ä—ë–º chat_id
                text = message["text"]["body"]  # –î–æ—Å—Ç–∞—ë–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                print("üì® –ß–µ–∫–∞–π —Ç–µ–∫—Å—Ç: ", text)

                if text:
                    dialog1 = get_dialog_from_db(chat_id)
                    print(dialog1)
                    print("-" * 80)
                    if len(dialog1) >= 20:
                        del dialog1[:len(dialog1) - 20]
                    sgen_text = get_mess(text, "–¢—ã –ò–ò –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç", True, dialog1)
                    print(sgen_text)
                    print("-" * 80)
                    send_message(chat_id, sgen_text)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ —Ç–æ—Ç –∂–µ —Ç–µ–∫—Å—Ç
                    dialog1.append({"role": "user", "message": text})
                    dialog1.append({"role": "assistant", "message": sgen_text})
                    print(dialog1)
                    save_dialog_to_db(chat_id, dialog1)

    return jsonify({"status": "ok"})

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ Flask
if __name__ == "__main__":
    def run_flask():
        app.run(host="0.0.0.0", port=5000)

    flask_thread = threading.Thread(target=run_flask, daemon=True)
    flask_thread.start()

    lt_process, tunnel_url = start_localtunnel(5000)

    # 3) –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ–ª—É—á–∏–ª–∏ tunnel_url, —à–ª—ë–º PATCH /settings –≤ Whapi
    if tunnel_url:
        # –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞
        API_KEY = "JeckyS6ptE9PA2ZPbq9dZD10zOMtsqOS"
        headers = {
            "Authorization": f"Bearer {API_KEY}",
            "Content-Type": "application/json"
        }
        data = {
            "webhooks": [
                {
                    "url": f"{tunnel_url}/webhook", 
                    "events": [
                        {"type": "messages", "method": "post"},
                        {"type": "statuses", "method": "post"}
                    ]
                }
            ]
        }
        r = requests.patch(PATCH_SETTINGS_ENDPOINT, headers=headers, json=data)
        print("PATCH /settings:", r.status_code, r.text)

    # 4) –û—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ¬´–∂–∏—Ç—å¬ª
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("Stopping LocalTunnel...")
        lt_process.terminate()
        lt_process.wait()